// React Hooks ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (state) ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á component
import { useState, useMemo } from "react"

// Components UI ‡∏à‡∏≤‡∏Å shadcn/ui ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
// ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
import { Input } from "@/components/ui/input"
// ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î
import { Button } from "@/components/ui/button"
// Dropdown (Select)
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
// ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
import { Textarea } from "@/components/ui/textarea"
// ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏•‡∏π‡∏Å‡∏®‡∏£‡∏à‡∏≤‡∏Å lucide-react
import { ChevronDown, ChevronUp } from "lucide-react"
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
import { user } from "@/Data/user"

// ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ (mock data)
const reportCategories = ["‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°/Error", "‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ", "‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡πÄ‡∏ô‡∏∞ / ‡πÄ‡∏ô‡∏≤‡∏ô‡∏∞‡∏ô‡∏≥‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"]

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (TypeScript interface)
interface ReportEntry {
  id: number
  name: string
  category: string
  position: string
  department: string
  description: string
  reportDate: string
}

// Component ‡∏´‡∏•‡∏±‡∏Å
const Report = () => {
  // üì¶ ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á State (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô component)
  const [searchQuery, setSearchQuery] = useState("") // ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  const [selectedCategory, setSelectedCategory] = useState("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î") // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const [expandedRows, setExpandedRows] = useState<Set<number>>(new Set()) // ‡πÄ‡∏Å‡πá‡∏ö id ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏Ç‡∏¢‡∏≤‡∏¢
  const [selectedUserId, setSelectedUserId] = useState<string>("") // ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤
  const [selectedReportCategory, setSelectedReportCategory] = useState<string>("") // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  const [reportDescription, setReportDescription] = useState<string>("") // ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
  const [reports, setReports] = useState<ReportEntry[]>([]) // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà
  const handleAddReport = () => {
    if (!selectedUserId || !selectedReportCategory || !reportDescription.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")
      return
    }

    const selectedUser = user.find((u) => u.id.toString() === selectedUserId)
    if (!selectedUser) return

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà
    const newReport: ReportEntry = {
      id: Date.now(), // ‡πÉ‡∏ä‡πâ timestamp ‡πÄ‡∏õ‡πá‡∏ô id
      name: `${selectedUser.fname} ${selectedUser.lname}`,
      category: selectedReportCategory,
      position: selectedUser.position,
      department: selectedUser.department,
      description: reportDescription,
      reportDate: new Date().toLocaleString("th-TH"), // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ state
    setReports([...reports, newReport])

    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°
    setSelectedUserId("")
    setSelectedReportCategory("")
    setReportDescription("")
  }

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const filteredReports = useMemo(() => {
    return reports.filter((report) => {
      const matchesSearch =
        report.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        report.position.toLowerCase().includes(searchQuery.toLowerCase()) ||
        report.department.toLowerCase().includes(searchQuery.toLowerCase())

      const matchesCategory = selectedCategory === "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" || report.category === selectedCategory
      return matchesSearch && matchesCategory
    })
  }, [searchQuery, selectedCategory, reports])

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß
  const toggleRow = (id: number) => {
    const newExpanded = new Set(expandedRows)
    if (newExpanded.has(id)) newExpanded.delete(id)
    else newExpanded.add(id)
    setExpandedRows(newExpanded)
  }

  // ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (JSX)
  return (
    <div className="w-full space-y-6 p-6">
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏ô‡πâ‡∏≤ */}
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤</h1>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á */}
      <div className="bg-card rounded-lg border-2 shadow-sm p-6 space-y-4">
        <h2 className="text-lg font-semibold">‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á */}
          <div className="space-y-2">
            <label className="text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</label>
            <Select value={selectedUserId} onValueChange={setSelectedUserId}>
              <SelectTrigger className="border-2">
                <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠" />
              </SelectTrigger>
              <SelectContent>
                {user.map((u) => (
                  <SelectItem key={u.id} value={u.id.toString()}>
                    {u.fname} {u.lname}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
          <div className="space-y-2">
            <label className="text-sm font-medium">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</label>
            <Select value={selectedReportCategory} onValueChange={setSelectedReportCategory}>
              <SelectTrigger className="border-2">
                <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà" />
              </SelectTrigger>
              <SelectContent>
                {reportCategories.map((cat) => (
                  <SelectItem key={cat} value={cat}>
                    {cat}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
        <div className="space-y-2">
          <label className="text-sm font-medium">‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏á</label>
          <Textarea
            placeholder="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..."
            value={reportDescription}
            onChange={(e) => setReportDescription(e.target.value)}
            className="border-2 min-h-[100px]"
          />
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <div className="flex justify-end">
          <Button onClick={handleAddReport}>‡πÄ‡∏û‡∏¥‡πà‡∏°</Button>
        </div>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
      <div className="bg-card rounded-lg border-2 shadow-sm p-6 space-y-4">
        {/* ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ + ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
        <div className="flex flex-col md:flex-row gap-4">
          <div className="flex-1 flex gap-2">
            <Input
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="pr-10 border-2"
            />
            <Button variant="default" onClick={() => setSearchQuery("")}>
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </Button>
          </div>
        </div>

        {/* Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
        <div className="flex items-center gap-2">
          <span className="text-sm font-medium whitespace-nowrap">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</span>
          <Select value={selectedCategory} onValueChange={setSelectedCategory}>
            <SelectTrigger className="w-[200px] border-2">
              <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</SelectItem>
              {reportCategories.map((cat) => (
                <SelectItem key={cat} value={cat}>
                  {cat}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>

        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <div className="rounded-lg border overflow-hidden">
          <Table>
            <TableHeader>
              <TableRow className="bg-muted/50">
                <TableHead>‡∏ä‡∏∑‡πà‡∏≠</TableHead>
                <TableHead>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</TableHead>
                <TableHead>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</TableHead>
                <TableHead>‡πÅ‡∏ú‡∏ô‡∏Å</TableHead>
                <TableHead className="text-center">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</TableHead>
              </TableRow>
            </TableHeader>

            <TableBody>
              {filteredReports.map((report) => (
                <>
                  {/* ‡πÅ‡∏ñ‡∏ß‡∏´‡∏•‡∏±‡∏Å */}
                  <TableRow key={report.id} className="hover:bg-muted/30 transition-colors">
                    <TableCell className="font-medium">{report.name}</TableCell>
                    <TableCell>{report.category}</TableCell>
                    <TableCell>{report.position}</TableCell>
                    <TableCell>{report.department}</TableCell>
                    <TableCell className="text-center">
                      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => toggleRow(report.id)}
                        className="flex-right gap-1 justify-end"
                      >
                        ‡∏î‡∏π {expandedRows.has(report.id) ? <ChevronUp className="h-4 w-4" /> : <ChevronDown className="h-4 w-4" />}
                      </Button>
                    </TableCell>
                  </TableRow>

                  {/* ‡πÅ‡∏ñ‡∏ß‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                  {expandedRows.has(report.id) && (
                    <TableRow key={`${report.id}-details`}>
                      <TableCell colSpan={5} className="bg-muted/20 p-6">
                        <div className="space-y-3">
                          <h3 className="font-semibold text-lg mb-4">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤</h3>
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div className="space-y-1">
                              <p className="text-sm font-medium text-muted-foreground">1. ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á:</p>
                              <p className="text-base">{report.name}</p>
                            </div>
                            <div className="space-y-1">
                              <p className="text-sm font-medium text-muted-foreground">2. ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á:</p>
                              <p className="text-base">{report.reportDate}</p>
                            </div>
                            <div className="space-y-1">
                              <p className="text-sm font-medium text-muted-foreground">3. ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</p>
                              <p className="text-base">{report.position}</p>
                            </div>
                            <div className="space-y-1">
                              <p className="text-sm font-medium text-muted-foreground">4. ‡πÅ‡∏ú‡∏ô‡∏Å:</p>
                              <p className="text-base">{report.department}</p>
                            </div>
                            <div className="space-y-1 md:col-span-2">
                              <p className="text-sm font-medium text-muted-foreground">5. ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤:</p>
                              <p className="text-base">{report.description}</p>
                            </div>
                          </div>
                        </div>
                      </TableCell>
                    </TableRow>
                  )}
                </>
              ))}

              {/* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
              {filteredReports.length === 0 && (
                <TableRow>
                  <TableCell colSpan={5} className="text-center text-muted-foreground py-8">
                    ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                  </TableCell>
                </TableRow>
              )}
            </TableBody>
          </Table>
        </div>
      </div>
    </div>
  )
}

// ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å component
export default Report